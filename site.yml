---
- name: Pre tasks
  hosts: all
  pre_tasks:
    - name: Verify Ansible is version 2.11 or above. (If this fails you may need to update Ansible)
      assert:
        that: "ansible_version.full is version_compare('2.11', '>=')"
        msg: >
          "Ansible is out of date. See here for more info: https://docs.technotim.live/posts/ansible-automation/"

- name: Prepare Proxmox cluster
  hosts: proxmox
  gather_facts: true
  become: true
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - role: proxmox_lxc
      when: proxmox_lxc_configure

- name: Prepare k3s nodes
  hosts: k3s_cluster
  gather_facts: true
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - role: lxc
      become: true
      when: proxmox_lxc_configure
    - role: prereq
      become: true
    - role: download
      become: true
    - role: raspberrypi
      become: true
    - role: k3s_custom_registries
      become: true
      when: custom_registries

- name: Setup k3s servers
  hosts: master
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - role: k3s_server
      become: true

- name: Setup k3s agents
  hosts: node
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - role: k3s_agent
      become: true

- name: Configure k3s cluster
  hosts: master
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - role: k3s_server_post
      become: true

- name: Storing kubeconfig in the playbook directory
  hosts: master
  environment: "{{ proxy_env | default({}) }}"
  tasks:
    - name: Copying kubeconfig from {{ hostvars[groups[group_name_master | default('master')][0]]['ansible_hostname'] }}
      ansible.builtin.fetch:
        src: "{{ ansible_user_dir }}/.kube/config"
        dest: ./kubeconfig
        flat: true
      when: ansible_hostname == hostvars[groups[group_name_master | default('master')][0]]['ansible_hostname']

- name: Manage kubeconfig file for k3s cluster
  hosts: master[0]
  become: true
  tasks:
    - name: Temporarily change permissions to copy kubeconfig
      ansible.builtin.shell:
        cmd: "sudo chmod 777 /etc/rancher/k3s/k3s.yaml"
      become: true

    - name: Copy kubeconfig to local .kube directory
      ansible.builtin.fetch:
        src: "/etc/rancher/k3s/k3s.yaml"
        dest: "~/.kube/config"
        flat: true

    - name: Revert permissions on kubeconfig
      ansible.builtin.shell:
        cmd: "sudo chmod 600 /etc/rancher/k3s/k3s.yaml"
      become: true

    - name: Update kubeconfig to point to the master IP
      ansible.builtin.lineinfile:
        path: "/home/ubuntu-template/.kube/config"
        regexp: '    server: https://.*:6443'
        line: '    server: https://192.168.68.60:6443'
        backrefs: yes
      delegate_to: localhost

- name: Setup Helm and Kubernetes Repositories
  hosts: localhost
  become: yes
  tasks:
    - name: Download Helm command line tool
      ansible.builtin.uri:
        url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        return_content: true
      register: helm_installer

    - name: Install Helm
      ansible.builtin.shell:
        cmd: bash
        stdin: "{{ helm_installer.content }}"
        creates: /usr/local/bin/helm
      environment:
        DESIRED_VERSION: "{{ helm_version | default('') }}"

- name: Rancher install
  hosts: localhost
  roles:
   - rancher

- name: Deploy Ceph CSI RBD on Kubernetes Masters
  hosts: localhost
  roles:
    - ceph_csi_setup

- name: Deploy Nvidia-drivers on Masters nodes
  hosts: master[2]
  roles:
    - nvidia-drivers

- name: Deploy Nvidia-operator on Kubernetes Masters
  hosts: localhost
  roles:
    - nvidia-operator

